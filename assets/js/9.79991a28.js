(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{217:function(t,s,a){"use strict";a.r(s);var n=a(0),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"constants"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#constants","aria-hidden":"true"}},[t._v("#")]),t._v(" Constants")]),t._v(" "),a("p",[t._v("General")]),t._v(" "),a("p",[a("strong",[t._v("LINUXDUINO_VERSION")]),t._v(": Shows the current Linuxduino version")]),t._v(" "),a("p",[t._v("GPIO Operations")]),t._v(" "),a("p",[a("strong",[t._v("HIGH")]),t._v(": Equal to 1"),a("br"),t._v(" "),a("strong",[t._v("LOW")]),t._v(": Equal to 0"),a("br"),t._v(" "),a("strong",[t._v("INPUT")]),t._v(": Sets GPIO pin as input"),a("br"),t._v(" "),a("strong",[t._v("OUTPUT")]),t._v(": Sets GPIO pin as output"),a("br"),t._v("\n// GPIO Legacy constants"),a("br"),t._v(" "),a("strong",[t._v("INPUT_PULLUP")]),t._v(": No effect same as input"),a("br"),t._v(" "),a("strong",[t._v("INPUT_PULLDOWN")]),t._v(": No effect same as input"),a("br"),t._v("\n(TODO ADD RPI_...)")]),t._v(" "),a("p",[t._v("Serial Operations")]),t._v(" "),a("p",[a("strong",[t._v("DEC")]),t._v(": prints as decimal ascii text"),a("br"),t._v(" "),a("strong",[t._v("HEX")]),t._v(": prints as hexadecimal ascii text"),a("br"),t._v(" "),a("strong",[t._v("BIN")]),t._v(": prints as binary ascii text"),a("br"),t._v(" "),a("strong",[t._v("OCT")]),t._v(": prints as octal ascii text"),a("br"),t._v(" "),a("strong",[t._v("SERIAL_5N1")]),t._v(": Opens serial as -> data: 5 bits, partiy: None, stop bits: 1 bit"),a("br"),t._v(" "),a("strong",[t._v("SERIAL_6N1")]),t._v(": Opens serial as -> data: 6 bits, partiy: None, stop bits: 1 bit"),a("br"),t._v(" "),a("strong",[t._v("SERIAL_7N1")]),t._v(": Opens serial as -> data: 7 bits, partiy: None, stop bits: 1 bit"),a("br"),t._v(" "),a("strong",[t._v("SERIAL_8N1")]),t._v(": Opens serial as -> data: 8 bits, partiy: None, stop bits: 1 bit"),a("br"),t._v(" "),a("strong",[t._v("SERIAL_5N2")]),t._v(": Opens serial as -> data: 5 bits, partiy: None, stop bits: 2 bit"),a("br"),t._v(" "),a("strong",[t._v("SERIAL_6N2")]),t._v(": Opens serial as -> data: 6 bits, partiy: None, stop bits: 2 bit"),a("br"),t._v(" "),a("strong",[t._v("SERIAL_7N2")]),t._v(": Opens serial as -> data: 7 bits, partiy: None, stop bits: 2 bit"),a("br"),t._v(" "),a("strong",[t._v("SERIAL_8N2")]),t._v(": Opens serial as -> data: 8 bits, partiy: None, stop bits: 2 bit"),a("br"),t._v(" "),a("strong",[t._v("SERIAL_5E1")]),t._v(": Opens serial as -> data: 5 bits, partiy: Even, stop bits: 1 bit"),a("br"),t._v(" "),a("strong",[t._v("SERIAL_6E1")]),t._v(": Opens serial as -> data: 6 bits, partiy: Even, stop bits: 1 bit"),a("br"),t._v(" "),a("strong",[t._v("SERIAL_7E1")]),t._v(": Opens serial as -> data: 7 bits, partiy: Even, stop bits: 1 bit"),a("br"),t._v(" "),a("strong",[t._v("SERIAL_8E1")]),t._v(": Opens serial as -> data: 8 bits, partiy: Even, stop bits: 1 bit"),a("br"),t._v(" "),a("strong",[t._v("SERIAL_5E2")]),t._v(": Opens serial as -> data: 5 bits, partiy: Even, stop bits: 2 bit"),a("br"),t._v(" "),a("strong",[t._v("SERIAL_6E2")]),t._v(": Opens serial as -> data: 6 bits, partiy: Even, stop bits: 2 bit"),a("br"),t._v(" "),a("strong",[t._v("SERIAL_7E2")]),t._v(": Opens serial as -> data: 7 bits, partiy: Even, stop bits: 2 bit"),a("br"),t._v(" "),a("strong",[t._v("SERIAL_8E2")]),t._v(": Opens serial as -> data: 8 bits, partiy: Even, stop bits: 2 bit"),a("br"),t._v(" "),a("strong",[t._v("SERIAL_5O1")]),t._v(": Opens serial as -> data: 5 bits, partiy: Odd, stop bits: 1 bit"),a("br"),t._v(" "),a("strong",[t._v("SERIAL_6O1")]),t._v(": Opens serial as -> data: 6 bits, partiy: Odd, stop bits: 1 bit"),a("br"),t._v(" "),a("strong",[t._v("SERIAL_7O1")]),t._v(": Opens serial as -> data: 7 bits, partiy: Odd, stop bits: 1 bit"),a("br"),t._v(" "),a("strong",[t._v("SERIAL_8O1")]),t._v(": Opens serial as -> data: 8 bits, partiy: Odd, stop bits: 1 bit"),a("br"),t._v(" "),a("strong",[t._v("SERIAL_5O2")]),t._v(": Opens serial as -> data: 5 bits, partiy: Odd, stop bits: 2 bit"),a("br"),t._v(" "),a("strong",[t._v("SERIAL_6O2")]),t._v(": Opens serial as -> data: 6 bits, partiy: Odd, stop bits: 2 bit"),a("br"),t._v(" "),a("strong",[t._v("SERIAL_7O2")]),t._v(": Opens serial as -> data: 7 bits, partiy: Odd, stop bits: 2 bit"),a("br"),t._v(" "),a("strong",[t._v("SERIAL_8O2")]),t._v(": Opens serial as -> data: 8 bits, partiy: Odd, stop bits: 2 bit")]),t._v(" "),a("p",[t._v("SPI Operations")]),t._v(" "),a("p",[a("strong",[t._v("LSBFIRST")]),t._v(": Sends least significant bit first."),a("br"),t._v(" "),a("strong",[t._v("MSBFIRST")]),t._v(": Sends most significant bit first."),a("br"),t._v(" "),a("strong",[t._v("SPI_MODE0")]),t._v(": Clock Idle low -> CPOL=0, First edge Sampling -> CPHA=0"),a("br"),t._v(" "),a("strong",[t._v("SPI_MODE1")]),t._v(": Clock Idle low -> CPOL=0, Second edge Sampling -> CPHA=1"),a("br"),t._v(" "),a("strong",[t._v("SPI_MODE2")]),t._v(": Clock Idle high -> CPOL=1, First edge Sampling -> CPHA=0"),a("br"),t._v(" "),a("strong",[t._v("SPI_MODE3")]),t._v(": Clock Idle high -> CPOL=1, Second edge Sampling -> CPHA=1"),a("br"),t._v(" "),a("strong",[t._v("SPI_CLOCK_DIV2")]),t._v(": SPI clock to 8000000 (8 Mhz)"),a("br"),t._v(" "),a("strong",[t._v("SPI_CLOCK_DIV4")]),t._v(": SPI clock to 4000000 (4 Mhz)"),a("br"),t._v(" "),a("strong",[t._v("SPI_CLOCK_DIV8")]),t._v(": SPI clock to 2000000 (2 Mhz)"),a("br"),t._v(" "),a("strong",[t._v("SPI_CLOCK_DIV16")]),t._v(": SPI clock to 1000000 (1 Mhz)"),a("br"),t._v(" "),a("strong",[t._v("SPI_CLOCK_DIV32")]),t._v(": SPI clock to 500000 (500 khz)"),a("br"),t._v(" "),a("strong",[t._v("SPI_CLOCK_DIV64")]),t._v(": SPI clock to 250000 (250 khz)"),a("br"),t._v(" "),a("strong",[t._v("SPI_CLOCK_DIV128")]),t._v(": SPI clock to 125000 (125 khz)")]),t._v(" "),a("p",[t._v("I2C (Wire) Operations")]),t._v(" "),a("p",[a("strong",[t._v("BUFFER_LENGTH")]),t._v(": Max I2C buffer available for transfers -> Set to 512 bytes.")]),t._v(" "),a("h2",{attrs:{id:"example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example","aria-hidden":"true"}},[t._v("#")]),t._v(" Example")]),t._v(" "),a("h3",{attrs:{id:"javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript","aria-hidden":"true"}},[t._v("#")]),t._v(" Javascript")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" linuxduino "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'linuxduino'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Test digitalWrite")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Wait for wasm file")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" linuxduino"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ready"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" ledPin "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Embedded board GPIO Number")]),t._v("\n  linuxduino"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pinMode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ledPin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" linuxduino"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("OUTPUT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Linuxduino Version:"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" linuxduino"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LINUXDUINO_VERSION")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"LED ON"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    linuxduino"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("digitalWrite")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ledPin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" linuxduino"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HIGH")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    linuxduino"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("delay")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Delay 1 sec")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"LED OFF"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    linuxduino"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("digitalWrite")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ledPin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" linuxduino"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LOW")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    linuxduino"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("delay")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Delay 1 sec")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("Run it")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("sudo node digitalWrite"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js\n")])])]),a("h3",{attrs:{id:"c"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c","aria-hidden":"true"}},[t._v("#")]),t._v(" C++")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Linuxduino.h"')])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Test digitalWrite")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" ledPin "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Embedded board GPIO Number")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pinMode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ledPin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" OUTPUT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Linuxduino Version: %s\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LINUXDUINO_VERSION"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"LED ON\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("digitalWrite")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ledPin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" HIGH"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("delay")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Delay 1 sec")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"LED OFF\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("digitalWrite")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ledPin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LOW"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("delay")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Delay 1 sec")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Run it")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("g++ digitalRead.cpp -o digitalRead -llxduino\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" ./digitalRead\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);